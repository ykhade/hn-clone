{"ast":null,"code":"var STORAGE_TYPE = 'localStorage';\n\nvar hasLocalStorage = function hasLocalStorage() {\n  var storageType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : STORAGE_TYPE;\n\n  if (typeof window === 'undefined' || !(storageType in window)) {\n    return false;\n  }\n\n  try {\n    var storage = window[storageType];\n    var testKey = \"storage \".concat(storageType, \" test\");\n    storage.setItem(testKey, 'test');\n    storage.getItem(testKey);\n    storage.removeItem(testKey);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(\"redux-persist \".concat(storageType, \" test failed, persistence will be disabled.\"));\n    }\n\n    return false;\n  }\n\n  return true;\n};\n\nexport default hasLocalStorage;","map":{"version":3,"sources":["/Users/yashkhade/source/hn-clone/src/store/middleware/localStorageMiddleware/hasLocalStorage.js"],"names":["STORAGE_TYPE","hasLocalStorage","storageType","window","storage","testKey","setItem","getItem","removeItem","e","process","env","NODE_ENV","console","warn"],"mappings":"AAAA,IAAMA,YAAY,GAAG,cAArB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAgC;AAAA,MAA/BC,WAA+B,uEAAjBF,YAAiB;;AACtD,MAAI,OAAOG,MAAP,KAAkB,WAAlB,IAAiC,EAAED,WAAW,IAAIC,MAAjB,CAArC,EAA+D;AAC7D,WAAO,KAAP;AACD;;AAED,MAAI;AACF,QAAIC,OAAO,GAAGD,MAAM,CAACD,WAAD,CAApB;AACA,QAAMG,OAAO,qBAAcH,WAAd,UAAb;AACAE,IAAAA,OAAO,CAACE,OAAR,CAAgBD,OAAhB,EAAyB,MAAzB;AACAD,IAAAA,OAAO,CAACG,OAAR,CAAgBF,OAAhB;AACAD,IAAAA,OAAO,CAACI,UAAR,CAAmBH,OAAnB;AACD,GAND,CAME,OAAOI,CAAP,EAAU;AACV,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,MAAAA,OAAO,CAACC,IAAR,yBAA8BZ,WAA9B;AACD;;AAED,WAAO,KAAP;AACD;;AAED,SAAO,IAAP;AACD,CApBD;;AAsBA,eAAeD,eAAf","sourcesContent":["const STORAGE_TYPE = 'localStorage';\n\nconst hasLocalStorage = (storageType = STORAGE_TYPE) => {\n  if (typeof window === 'undefined' || !(storageType in window)) {\n    return false;\n  }\n\n  try {\n    let storage = window[storageType];\n    const testKey = `storage ${storageType} test`;\n    storage.setItem(testKey, 'test');\n    storage.getItem(testKey);\n    storage.removeItem(testKey);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(`redux-persist ${storageType} test failed, persistence will be disabled.`);\n    }\n\n    return false;\n  }\n\n  return true;\n};\n\nexport default hasLocalStorage;\n"]},"metadata":{},"sourceType":"module"}