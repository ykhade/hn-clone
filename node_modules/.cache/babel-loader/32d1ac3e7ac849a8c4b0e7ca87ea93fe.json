{"ast":null,"code":"import hackerNewsApi from 'services/hackerNewsApi';\nimport { buildRequestCreator } from 'store/utils';\nvar NS = '@hackerNewsReader/story';\nexport var actionTypes = {\n  FETCH_STORY_IDS: \"\".concat(NS, \"/FETCH_STORY_IDS\"),\n  FETCH_STORIES: \"\".concat(NS, \"/FETCH_STORIES\")\n};\nvar actions = {\n  fetchStoryIds: buildRequestCreator(actionTypes.FETCH_STORY_IDS, function (_ref) {\n    var request = _ref.request,\n        payload = _ref.payload,\n        dispatch = _ref.dispatch;\n    dispatch(request.request(payload));\n    return hackerNewsApi.getTopStoryIds().then(function (storyIds) {\n      dispatch(request.success({\n        storyIds: storyIds\n      }));\n      dispatch(actions.fetchStories({\n        storyIds: storyIds,\n        page: 0\n      }));\n      return storyIds;\n    }).catch(function (err) {\n      return dispatch(request.failure(err));\n    });\n  }),\n  fetchStories: buildRequestCreator(actionTypes.FETCH_STORIES, function (_ref2) {\n    var request = _ref2.request,\n        payload = _ref2.payload,\n        dispatch = _ref2.dispatch;\n    var storyIds = payload.storyIds,\n        page = payload.page;\n    dispatch(request.request(payload));\n    return hackerNewsApi.getStoriesByPage(storyIds, page).then(function (stories) {\n      return dispatch(request.success({\n        stories: stories\n      }));\n    }).catch(function (err) {\n      return dispatch(request.failure(err));\n    });\n  })\n};\nexport default actions;","map":{"version":3,"sources":["/Users/yashkhade/source/myclone/hacker-news-reader/src/store/story/actions.js"],"names":["hackerNewsApi","buildRequestCreator","NS","actionTypes","FETCH_STORY_IDS","FETCH_STORIES","actions","fetchStoryIds","request","payload","dispatch","getTopStoryIds","then","storyIds","success","fetchStories","page","catch","err","failure","getStoriesByPage","stories"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,wBAA1B;AACA,SAASC,mBAAT,QAAoC,aAApC;AAEA,IAAMC,EAAE,GAAG,yBAAX;AAEA,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,eAAe,YAAKF,EAAL,qBADU;AAEzBG,EAAAA,aAAa,YAAKH,EAAL;AAFY,CAApB;AAKP,IAAMI,OAAO,GAAG;AACdC,EAAAA,aAAa,EAAEN,mBAAmB,CAChCE,WAAW,CAACC,eADoB,EAEhC,gBAAoC;AAAA,QAAjCI,OAAiC,QAAjCA,OAAiC;AAAA,QAAxBC,OAAwB,QAAxBA,OAAwB;AAAA,QAAfC,QAAe,QAAfA,QAAe;AAClCA,IAAAA,QAAQ,CAACF,OAAO,CAACA,OAAR,CAAgBC,OAAhB,CAAD,CAAR;AACA,WAAOT,aAAa,CACjBW,cADI,GAEJC,IAFI,CAEC,UAAAC,QAAQ,EAAI;AAChBH,MAAAA,QAAQ,CAACF,OAAO,CAACM,OAAR,CAAgB;AAAED,QAAAA,QAAQ,EAARA;AAAF,OAAhB,CAAD,CAAR;AACAH,MAAAA,QAAQ,CAACJ,OAAO,CAACS,YAAR,CAAqB;AAAEF,QAAAA,QAAQ,EAARA,QAAF;AAAYG,QAAAA,IAAI,EAAE;AAAlB,OAArB,CAAD,CAAR;AACA,aAAOH,QAAP;AACD,KANI,EAOJI,KAPI,CAOE,UAAAC,GAAG;AAAA,aAAIR,QAAQ,CAACF,OAAO,CAACW,OAAR,CAAgBD,GAAhB,CAAD,CAAZ;AAAA,KAPL,CAAP;AAQD,GAZ+B,CADpB;AAedH,EAAAA,YAAY,EAAEd,mBAAmB,CAACE,WAAW,CAACE,aAAb,EAA4B,iBAAoC;AAAA,QAAjCG,OAAiC,SAAjCA,OAAiC;AAAA,QAAxBC,OAAwB,SAAxBA,OAAwB;AAAA,QAAfC,QAAe,SAAfA,QAAe;AAAA,QACvFG,QADuF,GACpEJ,OADoE,CACvFI,QADuF;AAAA,QAC7EG,IAD6E,GACpEP,OADoE,CAC7EO,IAD6E;AAE/FN,IAAAA,QAAQ,CAACF,OAAO,CAACA,OAAR,CAAgBC,OAAhB,CAAD,CAAR;AACA,WAAOT,aAAa,CACjBoB,gBADI,CACaP,QADb,EACuBG,IADvB,EAEJJ,IAFI,CAEC,UAAAS,OAAO;AAAA,aAAIX,QAAQ,CAACF,OAAO,CAACM,OAAR,CAAgB;AAAEO,QAAAA,OAAO,EAAPA;AAAF,OAAhB,CAAD,CAAZ;AAAA,KAFR,EAGJJ,KAHI,CAGE,UAAAC,GAAG;AAAA,aAAIR,QAAQ,CAACF,OAAO,CAACW,OAAR,CAAgBD,GAAhB,CAAD,CAAZ;AAAA,KAHL,CAAP;AAID,GAPgC;AAfnB,CAAhB;AAyBA,eAAeZ,OAAf","sourcesContent":["import hackerNewsApi from 'services/hackerNewsApi';\nimport { buildRequestCreator } from 'store/utils';\n\nconst NS = '@hackerNewsReader/story';\n\nexport const actionTypes = {\n  FETCH_STORY_IDS: `${NS}/FETCH_STORY_IDS`,\n  FETCH_STORIES: `${NS}/FETCH_STORIES`,\n};\n\nconst actions = {\n  fetchStoryIds: buildRequestCreator(\n    actionTypes.FETCH_STORY_IDS,\n    ({ request, payload, dispatch }) => {\n      dispatch(request.request(payload));\n      return hackerNewsApi\n        .getTopStoryIds()\n        .then(storyIds => {\n          dispatch(request.success({ storyIds }));\n          dispatch(actions.fetchStories({ storyIds, page: 0 }));\n          return storyIds;\n        })\n        .catch(err => dispatch(request.failure(err)));\n    },\n  ),\n  fetchStories: buildRequestCreator(actionTypes.FETCH_STORIES, ({ request, payload, dispatch }) => {\n    const { storyIds, page } = payload;\n    dispatch(request.request(payload));\n    return hackerNewsApi\n      .getStoriesByPage(storyIds, page)\n      .then(stories => dispatch(request.success({ stories })))\n      .catch(err => dispatch(request.failure(err)));\n  }),\n};\n\nexport default actions;\n"]},"metadata":{},"sourceType":"module"}