{"ast":null,"code":"import hasLocalStorage from './hasLocalStorage';\nimport loadState from './loadState';\nimport saveState from './saveState';\n\nvar emptyMiddleware = function emptyMiddleware(storageDefinitions) {\n  return function (store) {\n    return function (next) {\n      return function (action) {\n        return next(action);\n      };\n    };\n  };\n};\n\nvar localCacheMiddleware = function localCacheMiddleware(storageDefinitions) {\n  return function (store) {\n    return function (next) {\n      return function (action) {\n        var prevState = store.getState();\n        var localCacheFunction = storageDefinitions[action.type];\n        var result = next(action);\n        var nextState = store.getState();\n\n        if (localCacheFunction) {\n          if (typeof localCacheFunction === 'function') {\n            localCacheFunction({\n              action: action,\n              loadState: loadState,\n              saveState: saveState,\n              prevState: prevState,\n              nextState: nextState,\n              dispatch: store.dispatch\n            });\n          } else if (Array.isArray(localCacheFunction)) {\n            localCacheFunction.forEach(function (f) {\n              return f({\n                action: action,\n                loadState: loadState,\n                saveState: saveState,\n                prevState: prevState,\n                nextState: nextState,\n                dispatch: store.dispatch\n              });\n            });\n          }\n        }\n\n        return result;\n      };\n    };\n  };\n};\n\nvar localCache = hasLocalStorage() ? localCacheMiddleware : emptyMiddleware;\nexport default localCache;","map":{"version":3,"sources":["/Users/yashkhade/source/myclone/hacker-news-reader/src/store/middleware/localStorageMiddleware/index.js"],"names":["hasLocalStorage","loadState","saveState","emptyMiddleware","storageDefinitions","store","next","action","localCacheMiddleware","prevState","getState","localCacheFunction","type","result","nextState","dispatch","Array","isArray","forEach","f","localCache"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,kBAAkB;AAAA,SAAI,UAAAC,KAAK;AAAA,WAAI,UAAAC,IAAI;AAAA,aAAI,UAAAC,MAAM;AAAA,eAAID,IAAI,CAACC,MAAD,CAAR;AAAA,OAAV;AAAA,KAAR;AAAA,GAAT;AAAA,CAA1C;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAJ,kBAAkB;AAAA,SAAI,UAAAC,KAAK;AAAA,WAAI,UAAAC,IAAI;AAAA,aAAI,UAAAC,MAAM,EAAI;AAC5E,YAAME,SAAS,GAAGJ,KAAK,CAACK,QAAN,EAAlB;AACA,YAAMC,kBAAkB,GAAGP,kBAAkB,CAACG,MAAM,CAACK,IAAR,CAA7C;AACA,YAAMC,MAAM,GAAGP,IAAI,CAACC,MAAD,CAAnB;AACA,YAAMO,SAAS,GAAGT,KAAK,CAACK,QAAN,EAAlB;;AAEA,YAAIC,kBAAJ,EAAwB;AACtB,cAAI,OAAOA,kBAAP,KAA8B,UAAlC,EAA8C;AAC5CA,YAAAA,kBAAkB,CAAC;AACjBJ,cAAAA,MAAM,EAANA,MADiB;AAEjBN,cAAAA,SAAS,EAATA,SAFiB;AAGjBC,cAAAA,SAAS,EAATA,SAHiB;AAIjBO,cAAAA,SAAS,EAATA,SAJiB;AAKjBK,cAAAA,SAAS,EAATA,SALiB;AAMjBC,cAAAA,QAAQ,EAAEV,KAAK,CAACU;AANC,aAAD,CAAlB;AAQD,WATD,MASO,IAAIC,KAAK,CAACC,OAAN,CAAcN,kBAAd,CAAJ,EAAuC;AAC5CA,YAAAA,kBAAkB,CAACO,OAAnB,CAA2B,UAAAC,CAAC;AAAA,qBAC1BA,CAAC,CAAC;AACAZ,gBAAAA,MAAM,EAANA,MADA;AAEAN,gBAAAA,SAAS,EAATA,SAFA;AAGAC,gBAAAA,SAAS,EAATA,SAHA;AAIAO,gBAAAA,SAAS,EAATA,SAJA;AAKAK,gBAAAA,SAAS,EAATA,SALA;AAMAC,gBAAAA,QAAQ,EAAEV,KAAK,CAACU;AANhB,eAAD,CADyB;AAAA,aAA5B;AAUD;AACF;;AAED,eAAOF,MAAP;AACD,OA/B+D;AAAA,KAAR;AAAA,GAAT;AAAA,CAA/C;;AAiCA,IAAMO,UAAU,GAAGpB,eAAe,KAAKQ,oBAAL,GAA4BL,eAA9D;AAEA,eAAeiB,UAAf","sourcesContent":["import hasLocalStorage from './hasLocalStorage';\nimport loadState from './loadState';\nimport saveState from './saveState';\n\nconst emptyMiddleware = storageDefinitions => store => next => action => next(action);\n\nconst localCacheMiddleware = storageDefinitions => store => next => action => {\n  const prevState = store.getState();\n  const localCacheFunction = storageDefinitions[action.type];\n  const result = next(action);\n  const nextState = store.getState();\n\n  if (localCacheFunction) {\n    if (typeof localCacheFunction === 'function') {\n      localCacheFunction({\n        action,\n        loadState,\n        saveState,\n        prevState,\n        nextState,\n        dispatch: store.dispatch,\n      });\n    } else if (Array.isArray(localCacheFunction)) {\n      localCacheFunction.forEach(f =>\n        f({\n          action,\n          loadState,\n          saveState,\n          prevState,\n          nextState,\n          dispatch: store.dispatch,\n        }),\n      );\n    }\n  }\n\n  return result;\n};\n\nconst localCache = hasLocalStorage() ? localCacheMiddleware : emptyMiddleware;\n\nexport default localCache;\n"]},"metadata":{},"sourceType":"module"}