{"ast":null,"code":"import _objectSpread from \"/Users/yashkhade/source/myclone/hacker-news-reader/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { actionTypes } from './actions';\nimport { layouts, themes } from './utils';\n\nvar getInitialState = function getInitialState() {\n  return {\n    theme: themes.dark,\n    layout: layouts.list\n  };\n};\n\nvar app = function app() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getInitialState();\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  console.log('payload: ', payload);\n\n  switch (type) {\n    case actionTypes.SET_THEME:\n      return _objectSpread({}, state, payload);\n\n    case actionTypes.SET_LAYOUT:\n      return _objectSpread({}, state, payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default app;","map":{"version":3,"sources":["/Users/yashkhade/source/myclone/hacker-news-reader/src/store/app/reducer.js"],"names":["actionTypes","layouts","themes","getInitialState","theme","dark","layout","list","app","state","type","payload","console","log","SET_THEME","SET_LAYOUT"],"mappings":";AAAA,SAASA,WAAT,QAA4B,WAA5B;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,SAAhC;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAO;AAC7BC,IAAAA,KAAK,EAAEF,MAAM,CAACG,IADe;AAE7BC,IAAAA,MAAM,EAAEL,OAAO,CAACM;AAFa,GAAP;AAAA,CAAxB;;AAKA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAkD;AAAA,MAAjDC,KAAiD,uEAAzCN,eAAe,EAA0B;;AAAA;AAAA,MAApBO,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAC5DC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,OAAzB;;AACA,UAAQD,IAAR;AACE,SAAKV,WAAW,CAACc,SAAjB;AACE,+BACKL,KADL,EAEKE,OAFL;;AAIF,SAAKX,WAAW,CAACe,UAAjB;AACE,+BACKN,KADL,EAEKE,OAFL;;AAIF;AACE,aAAOF,KAAP;AAZJ;AAcD,CAhBD;;AAkBA,eAAeD,GAAf","sourcesContent":["import { actionTypes } from './actions';\nimport { layouts, themes } from './utils';\n\nconst getInitialState = () => ({\n  theme: themes.dark,\n  layout: layouts.list,\n});\n\nconst app = (state = getInitialState(), { type, payload }) => {\n  console.log('payload: ', payload);\n  switch (type) {\n    case actionTypes.SET_THEME:\n      return {\n        ...state,\n        ...payload,\n      };\n    case actionTypes.SET_LAYOUT:\n      return {\n        ...state,\n        ...payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default app;\n"]},"metadata":{},"sourceType":"module"}