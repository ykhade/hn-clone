{"ast":null,"code":"import { applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport localStorageMiddleware from 'store/middleware/localStorageMiddleware';\nimport storageDefinitions from 'store/middleware/localStorageMiddleware/storageDefinitions';\nvar isProd = process.env.NODE_ENV === 'production';\nvar middlewareList = [];\n\nvar devTool = function devTool(f) {\n  return f;\n};\n\nmiddlewareList.push(thunk);\nmiddlewareList.push(localStorageMiddleware(storageDefinitions));\n\nif (!isProd) {\n  middlewareList.push(createLogger());\n}\n\nvar middleware = compose(applyMiddleware.apply(void 0, middlewareList), devTool);\nexport default middleware;","map":{"version":3,"sources":["/Users/yashkhade/source/myclone/hacker-news-reader/src/store/middleware/index.js"],"names":["applyMiddleware","compose","thunk","createLogger","localStorageMiddleware","storageDefinitions","isProd","process","env","NODE_ENV","middlewareList","devTool","f","push","middleware"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,sBAAP,MAAmC,yCAAnC;AACA,OAAOC,kBAAP,MAA+B,4DAA/B;AAEA,IAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAxC;AACA,IAAMC,cAAc,GAAG,EAAvB;;AACA,IAAIC,OAAO,GAAG,SAAVA,OAAU,CAAAC,CAAC;AAAA,SAAIA,CAAJ;AAAA,CAAf;;AAEAF,cAAc,CAACG,IAAf,CAAoBX,KAApB;AACAQ,cAAc,CAACG,IAAf,CAAoBT,sBAAsB,CAACC,kBAAD,CAA1C;;AAEA,IAAI,CAACC,MAAL,EAAa;AACXI,EAAAA,cAAc,CAACG,IAAf,CAAoBV,YAAY,EAAhC;AACD;;AAED,IAAMW,UAAU,GAAGb,OAAO,CACxBD,eAAe,MAAf,SAAmBU,cAAnB,CADwB,EAExBC,OAFwB,CAA1B;AAKA,eAAeG,UAAf","sourcesContent":["import { applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport localStorageMiddleware from 'store/middleware/localStorageMiddleware';\nimport storageDefinitions from 'store/middleware/localStorageMiddleware/storageDefinitions';\n\nconst isProd = process.env.NODE_ENV === 'production';\nconst middlewareList = [];\nlet devTool = f => f;\n\nmiddlewareList.push(thunk);\nmiddlewareList.push(localStorageMiddleware(storageDefinitions));\n\nif (!isProd) {\n  middlewareList.push(createLogger());\n}\n\nconst middleware = compose(\n  applyMiddleware(...middlewareList),\n  devTool,\n);\n\nexport default middleware;\n"]},"metadata":{},"sourceType":"module"}