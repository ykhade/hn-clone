{"ast":null,"code":"import _toConsumableArray from \"/Users/yashkhade/source/myclone/hacker-news-reader/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/yashkhade/source/myclone/hacker-news-reader/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { actionTypes } from './actions';\n\nvar getInitialState = function getInitialState() {\n  return {\n    storyIds: [],\n    stories: [],\n    page: 0,\n    isFetching: false,\n    error: ''\n  };\n};\n\nvar story = function story() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getInitialState();\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case \"\".concat(actionTypes.FETCH_STORY_IDS, \"_REQUEST\"):\n    case \"\".concat(actionTypes.FETCH_STORIES, \"_REQUEST\"):\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case \"\".concat(actionTypes.FETCH_STORY_IDS, \"_SUCCESS\"):\n      return _objectSpread({}, state, payload);\n\n    case \"\".concat(actionTypes.FETCH_STORIES, \"_SUCCESS\"):\n      return _objectSpread({}, state, {\n        stories: [].concat(_toConsumableArray(state.stories), _toConsumableArray(payload.stories)),\n        page: state.page + 1,\n        isFetching: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default story;","map":{"version":3,"sources":["/Users/yashkhade/source/myclone/hacker-news-reader/src/store/story/reducer.js"],"names":["actionTypes","getInitialState","storyIds","stories","page","isFetching","error","story","state","type","payload","FETCH_STORY_IDS","FETCH_STORIES"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,WAA5B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAO;AAC7BC,IAAAA,QAAQ,EAAE,EADmB;AAE7BC,IAAAA,OAAO,EAAE,EAFoB;AAG7BC,IAAAA,IAAI,EAAE,CAHuB;AAI7BC,IAAAA,UAAU,EAAE,KAJiB;AAK7BC,IAAAA,KAAK,EAAE;AALsB,GAAP;AAAA,CAAxB;;AAQA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAkD;AAAA,MAAjDC,KAAiD,uEAAzCP,eAAe,EAA0B;;AAAA;AAAA,MAApBQ,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAC9D,UAAQD,IAAR;AACE,mBAAQT,WAAW,CAACW,eAApB;AACA,mBAAQX,WAAW,CAACY,aAApB;AACE,+BACKJ,KADL;AAEEH,QAAAA,UAAU,EAAE;AAFd;;AAIF,mBAAQL,WAAW,CAACW,eAApB;AACE,+BACKH,KADL,EAEKE,OAFL;;AAIF,mBAAQV,WAAW,CAACY,aAApB;AACE,+BACKJ,KADL;AAEEL,QAAAA,OAAO,+BAAMK,KAAK,CAACL,OAAZ,sBAAwBO,OAAO,CAACP,OAAhC,EAFT;AAGEC,QAAAA,IAAI,EAAEI,KAAK,CAACJ,IAAN,GAAa,CAHrB;AAIEC,QAAAA,UAAU,EAAE;AAJd;;AAMF;AACE,aAAOG,KAAP;AApBJ;AAsBD,CAvBD;;AAyBA,eAAeD,KAAf","sourcesContent":["import { actionTypes } from './actions';\n\nconst getInitialState = () => ({\n  storyIds: [],\n  stories: [],\n  page: 0,\n  isFetching: false,\n  error: '',\n});\n\nconst story = (state = getInitialState(), { type, payload }) => {\n  switch (type) {\n    case `${actionTypes.FETCH_STORY_IDS}_REQUEST`:\n    case `${actionTypes.FETCH_STORIES}_REQUEST`:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case `${actionTypes.FETCH_STORY_IDS}_SUCCESS`:\n      return {\n        ...state,\n        ...payload,\n      };\n    case `${actionTypes.FETCH_STORIES}_SUCCESS`:\n      return {\n        ...state,\n        stories: [...state.stories, ...payload.stories],\n        page: state.page + 1,\n        isFetching: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default story;\n"]},"metadata":{},"sourceType":"module"}